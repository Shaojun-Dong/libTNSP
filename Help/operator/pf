.pf. (add Tensor as order in 2016.6.13 to be updata)
   Short for (Put forward)
   put one leg or some legs to the beginning of the Tensor.
   


SYNOPSIS

   Result=T.pf.ith
   Result=T.pf.intVec
   Result=T.pf.chara
   Result=T.pf.charVec
   
   
   integer             ith,ithVec(:)
   character(len=*)    chara,charVec(:)
   
NOTE:


     1. Result=T.pf.ith: put the ith leg to the beginning of the Tensor. For example the dimension of
        T is [2,3,4,5], the dimension of T.pf.2 will be [3,2,4,5].
        
     2. Result=T.pf.intVec: put the legs to the beginning of the Tensor,intVec specify the legs. For example the dimension of
        T is [2,3,4,5], the dimension of T.pf.(/2,5/) will be [3,5,2,4].
    
     3. Result=T.pf.chara: 
         1) if chara is full dimension name, which mean it contains the mark '.' in the name such as 'A.a' or 'Tensor.dimension'
            and so on, T.pf.chara is that put the leg with name chara to the beginning of the Tensor.For example the dimension of
            T is [2,3,4,5] and name are ['A.a','B.a','A.b','B.b'], the dimension of T.pf.'B.a' will be [3,2,4,5] and the name will
            be ['B.a','A.a','A.b','B.b'].
         2) if chara is Tensor name,  which mean it dose not contain the mark '.' in the name such as 'A' or 'Tensor' and so on.
            T.pf.chara is that put all the legs with the Tensor name called chara to the beginning of the Tensor. For example,
            the dimension of T is [2,3,4,5] and name are ['A.a','B.a','A.b','B.b'], the dimension of T.pf.'B' will be [3,5,2,4]
            and the name will be ['B.a','B.b','A.a','A.b'].
            
     4. Result=T.pf.charVec: put the legs to the beginning of the Tensor,charVec specify the legs, it should be full name of dimension,
        which mean it contains the mark '.' in the name such as 'A.a' or 'Tensor.dimension' and so on, For example the dimension of T
        is [2,3,4,5] and name are ['A.a','B.a','A.b','B.b'], the dimension of T.pf.(/'B.b','B.a'/) will be [5,3,2,4] and the name
        will be ['B.b','B.a','A.a','A.b'].
        
    5. (.pf.) is the same as T%forward()
    
EXAMPLE


----1------
  type(Tensor)::T,ResultT
  T=generate((/2,3,4,5,6/),'complex*16') !generate a 2*3*4*5 random number Tensor of type complex*16
  call T%setName(1,'Tensor.1st')
  call T%setName(2,'Tensor.2nd')
  call T%setName(3,'Tensor.3rd')
  call T%setName(4,'Tensor.4th')
  call T%setName(5,'Tensor.5th')
  call T%diminfo('dimension before T.pf.2')
  ResultT=T.pf.2
  call ResultT%diminfo('dimension after ResultT=T.pf.2,going to ResultT=ResultT.pf.(/3,4/)')
  ResultT=ResultT.pf.(/3,4/)
  call ResultT%diminfo('dimension after ResultT=ResultT.pf.(/3,4/),going to ResultT=ResultT.pf."Tensor.5th"')
  ResultT=ResultT.pf.'Tensor.5th'
  call ResultT%diminfo('dimension after ResultT=ResultT.pf."Tensor.5th",going to ResultT=ResultT.pf.(/"Tensor.4th","Tensor.2nd"/)')
  ResultT=ResultT.pf.(/'Tensor.4th','Tensor.2nd'/)
  call ResultT%diminfo('dimension after ResultT=ResultT.pf.(/"Tensor.4th","Tensor.2nd"/))')
  
 ----2------
  type(Tensor)::T
  T=generate((/2,3,4,5,6/),'complex*16') !generate a 2*3*4*5 random number Tensor of type complex*16
  call T%setName(1,'A.1st')
  call T%setName(2,'B.2nd')
  call T%setName(3,'B.3rd')
  call T%setName(4,'A.4th')
  call T%setName(5,'B.5th')
  call T%diminfo('dimension before T=T.pf."B"')
  T=T.pf.'B'
  call T%diminfo('dimension after T=T.pf."B"')
